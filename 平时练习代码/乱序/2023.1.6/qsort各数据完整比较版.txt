#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<float.h>
struct stu
{
	char name[20];
	int age;

};
int cmp_str_age(const void* e1, const void* e2)
{
	return((struct stu*)e1)->age - ((struct stu*)e2)->age;
}

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
int cmp_string(const void* e1, const void* e2)
{
	return strcmp((char*)e1, (char*)e2);
}
int cmp_float(const void* e1, const void* e2)
{
	if (*(float*)e1 > *(float*)e2)
	{
		return 1;
	}
	if (*(float*)e1 < *(float*)e2)
	{
		return 0;
	}
}
int main()
{
	int a[10]{ 10,9,8,7,6,5,4,3,2,1 };
	char s[20] = "HelloWorld";
	float f[5] = { 2.1,3.2,3.4,3.5,3.1 };
	int i;
	stu s1[3] = { {"zhang",20},{"li",21},{"wang",22} };
	qsort((void*)a, sizeof(a) / sizeof(a[0]), sizeof(int), cmp_int);//整形排序
	for (i = 0; i < sizeof(a) / sizeof(a[0]); i++)
	{
		printf("%d", (*(int*)a+i));
	}
	printf("\n");
	qsort((void*)s1, sizeof(s1) / sizeof(s1[0]), sizeof(stu), cmp_str_age);//结构体排序
	for (i = 0; i < sizeof(s1) / sizeof(s1[0]); i++)
	{
		printf("%d", ((stu*)(s1+i))->age);
	}
	printf("\n");
	qsort((void*)s,strlen(s), sizeof(char), cmp_string);//字符串排序
	
	printf("%s",(char*)s);
	printf("\n");
	qsort((void*)f, sizeof(f) / sizeof(f[0]), sizeof(float), cmp_float);
		for (i = 0;i < sizeof(f) / sizeof(f[0]);i++)
		{
			printf("%f\n", *(float*)(f + i));
		}
	

	

	

}