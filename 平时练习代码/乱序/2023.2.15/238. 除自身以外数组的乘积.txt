/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int fun(int* nums,int begin,int end)
{
    int sum = 1;
    for (int i = begin; i <= end; i++)
    {
        sum *= nums[i];
    }
    return sum;
}
int* productExceptSelf(int* nums, int numsSize, int* returnSize) {
    int i = 0;
    int* answer = (int*)malloc(sizeof(int) * numsSize);
    for (i = 0; i < numsSize; i++)
    {
        if(i==0)
        {
            answer[i]=fun(nums,i+1,numsSize-1);
        }
        if(i==numsSize-1)
        {
            answer[i]=fun(nums,0,i-1);
        }
        answer[i] = fun(nums, 0, i-1)*fun(nums,i+1,numsSize-1);
    }
    *returnSize=numsSize;
    return answer;

}