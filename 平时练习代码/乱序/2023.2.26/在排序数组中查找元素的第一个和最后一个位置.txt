/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 int Findfirstnum(int *nums,int numsSize, int target)
 {
     int l=0;
     int r=numsSize-1;
     while(l<r)
     {
         int mid=(r+l)>>1;
         if(nums[mid]<target)
         {
             l=mid+1;
         }
         else
         {
             r=mid;
         }
     }
     return l;
 }
 int Findfinalnum(int *nums,int numsSize, int target)
 {
     int l=0;
     int r=numsSize-1;
     while(l<r)
     {
         int mid=(r+l+1)>>1;
         if(nums[mid]<=target)
         {
             l=mid;
         }
         else
         {
             r=mid-1;
         }
     }
     return l;
 }
int* searchRange(int* nums, int numsSize, int target, int* returnSize){
     int *a=(int*)malloc(sizeof(int)*2);
     *returnSize=2;
     if(numsSize==0)
     {
         a[0]=-1;
         a[1]=-1;
         return a;
     }
     a[0]=Findfirstnum(nums,numsSize,target);
     a[1]=Findfinalnum(nums,numsSize,target);
     if(nums[a[0]]!=target&&nums[a[1]]!=target)
     {
         a[0]=-1;
         a[1]=-1;
     }
     return a;
     
     
}